{"version":3,"sources":["logo.svg","Components/Nav/logo.jpg","Components/Dashboard/Jumbo/jum.png","Components/Nav/SignedInLinks.js","store/actions/authActions.js","Components/Nav/SignedOutLinks.js","Components/Nav/Navbar.js","Components/Dashboard/Jumbo/Jumbo.js","Components/Dashboard/LeftBar/LeftBar.js","Components/Dashboard/RightBar/Notifications/Notifications.js","Components/Dashboard/RightBar/Jobs/Jobs.js","Components/Dashboard/RightBar/RightBar.js","Components/Dashboard/CenterItems/PostContainer/PostContainer.js","store/actions/publicPostActions.js","Components/Dashboard/CenterItems/PublicPosts/PostMapper.js","Components/Dashboard/CenterItems/PublicPosts/Posts.js","Components/Dashboard/CenterItems/CenterItems.js","Components/Dashboard/Dashboard.js","Components/auth/SignUp.js","Components/auth/SignIn.js","Components/myProfile/PostsCard.js","Components/myProfile/ProfilePostMapper.js","Components/myProfile/LikesMapper.js","Components/myProfile/FriendsMapper.js","Components/myProfile/Tab.js","store/actions/profileActions.js","Components/myProfile/MyProfile.js","Components/userProfile/UserProfile.js","store/actions/friendsActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["module","exports","connect","state","auth","firebase","dispatch","signOut","getState","getFirebase","then","type","props","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","useStyles","style","color","marginRight","to","href","onClick","SignedOutLinks","authError","links","uid","Navbar","className","bg","variant","Brand","width","src","require","alt","fontSize","Nav","isLoaded","Jumbo","textAlign","border","borderRadius","marginTop","LeftBar","listStyleType","Notifications","notifications","overflow","map","item","key","id","display","user","content","moment","time","toDate","fromNow","Jobs","jobs","padding","length","job","LogoUrl","Title","Company","compose","console","log","firestore","ordered","firestoreConnect","collection","limit","orderBy","sourceType","screenName","options","profile","createFilePost","file","text","getFirestore","authorId","authorName","firstName","authorLastname","lastName","postsArray","users","posts","add","createdAt","Date","authorLastName","likes","comments","UsersLiked","docRef","doc","update","concat","catch","err","uploadFile","ret","uploadTaskSnapshot","ref","getDownloadURL","url","imageUrl","classes","useState","imageAsFile","setImageAsFile","postText","setText","handleSubmit","e","preventDefault","PostText","borderTopRightRadius","borderTopLeftRadius","marginBottom","Avatar","top","aria-label","ppUrl","initials","onSubmit","autoComplete","TextField","multiline","disabled","isEmpty","name","required","submitField","document","getElementById","mainInp","querySelector","closeBtn","classList","remove","textClicked","onChange","target","value","handleChange","label","closeFieldHandler","paddingBottom","borderBottom","image","files","class","multiple","PublicPosts","userProfile","postLike","postId","like","UsersLikedUpdated","likedPosts","LikedPostsUpdated","postDislike","pos","indexOf","splice","position","createComment","comment","authorFirstName","authorProfilPictureLink","commentsArr","post","madeComments","madeCommentsUpdated","date","commentsUpdatedArr","authorPic","commentObj","setComment","commentSubmit","Card","CardHeader","pathname","action","IconButton","title","subheader","calendar","CardContent","Typography","component","includes","commentChange","cursor","SignUp","email","password","setState","signUp","this","htmlFor","Component","newUser","createUserWithEmailAndPassword","resp","set","friends","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","RecipeReviewCard","React","ProfilePostMapper","publicPosts","postsArr","push","LikesMapper","likesArr","FriendsMapper","friend","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","p","a11yProps","flexGrow","palette","background","paper","ScrollableTabsButtonAuto","setValue","AppBar","Tabs","event","newValue","indicatorColor","textColor","scrollButtons","Tab","Row","addUserImage","userId","margin","Container","for","addFriends","authId","userFriends","authFriends","authFriendsUpdated","userFriendsUpdated","removeFriends","userPath","window","location","split","pop","find","undefined","App","exact","path","Dashboard","MyProfile","UserProfile","Boolean","hostname","match","initState","authReducer","message","rootReducer","combineReducers","firestoreReducer","firebaseReducer","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rrfProps","createFirestoreInstance","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.6cf77c23.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.cb531ad9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jum.ae52e272.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { signOut } from \"../../store/actions/authActions\";\nimport { connect } from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Nav, NavDropdown, MenuItem, Navbar } from \"react-bootstrap\";\n\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { red } from \"@material-ui/core/colors\";\n\nexport function SignedInLinks(props) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));\n  const classes = useStyles();\n  if (props.auth) {\n    return (\n      <>\n        {/* <Form inline>\n          <NavDropdown\n            style={{\n              position: \"absolute\",\n              right: \"180px\",\n              top: \"30px\",\n            }}\n            id=\"basic-nav-dropdown\"\n          >\n            <NavDropdown.Item href=\"#action/3.1\">Profile</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.2\">Log Out</NavDropdown.Item>\n            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"#action/3.4\" className=\"border\">\n              Separated link\n            </NavDropdown.Item>\n          </NavDropdown>\n        </Form> */}\n        {/* <Avatar\n          style={{ marginTop: \"14px\", marginRight: \"10px\" }}\n          aria-label=\"recipe\"\n          className={classes.avatar}\n        >\n          {props.auth && props.auth.profile.initials}\n        </Avatar> */}\n        <NavLink\n          style={{ color: \"black\", marginRight: \"10px\" }}\n          to={\"/myprofile\"}\n        >\n          My Profile\n        </NavLink>{\" \"}\n        <a\n          style={{ color: \"black\", marginRight: \"10px\" }}\n          href=\"\"\n          onClick={() => props.signOut()}\n        >\n          Log Out\n        </a>\n      </>\n    );\n  } else {\n    return null;\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then((resp) => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n            likedPosts: [],\n            friends: [],\n            madeComments: [],\n            createdAt: new Date(),\n            posts: [],\n            email: newUser.email,\n            id: resp.user.uid,\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function SignedOutLinks() {\n  return (\n    <>\n      <li>\n        <NavLink style={{ color: \"black\", marginRight: \"10px\" }} to={\"/login\"}>\n          Login\n        </NavLink>\n      </li>\n      <li>\n        <NavLink style={{ color: \"black\" }} to={\"/signup\"}>\n          Sign Up\n        </NavLink>\n      </li>\n    </>\n  );\n}\n","import React from \"react\";\nimport { Nav, NavDropdown, MenuItem, Navbar } from \"react-bootstrap\";\n// import NavDropdown from \"react-bootstrap/Nav\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\n// import { Button, Navbar } from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport { connect } from \"react-redux\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { auth } = props;\n  const links = auth.uid ? (\n    <SignedInLinks></SignedInLinks>\n  ) : (\n    <SignedOutLinks></SignedOutLinks>\n  );\n  return (\n    <>\n      <Navbar\n        className=\"bg-white fixed-top, mb-1\"\n        style={{ height: \"91px\" }}\n        bg=\"light\"\n        variant=\"light\"\n      >\n        <NavLink to={\"/\"}>\n          <Navbar.Brand className=\"ml-3\">\n            <img width=\"90px\" src={require(\"./logo.jpg\")} alt=\"\" />\n            <span style={{ fontSize: \"30px\" }} className=\"ml-3\">\n              Network\n            </span>\n          </Navbar.Brand>\n        </NavLink>\n        <Nav className=\"ml-auto\">{auth.isLoaded && links}</Nav>\n      </Navbar>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Header);\n","import React from \"react\";\nimport style from \"./jumboStyle.css\";\nconst Jumbo = () => {\n  return (\n    <div className=\"jumbo\" style={{ textAlign: \"center\" }}>\n      <img\n        style={{\n          border: \"solid 1px white\",\n          borderRadius: \"20px\",\n          marginTop: \"0px\",\n        }}\n        width=\"1168px\"\n        height=\"230px\"\n        src={require(\"./jum.png\")}\n        // src=\"https://picsum.photos/1168/230.jpg\"\n      />\n    </div>\n  );\n};\n\nexport default Jumbo;\n// 1272x427\n\n// 1168x230\n//co\n","import React, { useEffect } from \"react\";\nimport LeftBarCss from \"./leftBar.css\";\nconst LeftBar = () => {\n  // useEffect(() => {\n  //   // Update the document title using the browser API\n  //   if (document.location.pathname === \"/\") {\n  //     document.body.addEventListener(\"scroll\", myFunction);\n  //   } else {\n  //     document.body.removeEventListener(\"scroll\", myFunction);\n  //   }\n  // });\n\n  return (\n    <>\n      <ul\n        className=\"leftUl\"\n        style={{\n          listStyleType: \"none\",\n          border: \"1px white solid\",\n          backgroundColor: \"white\",\n          width: \"190px\",\n          borderRadius: \"20px\",\n          // position: \"fixed\",\n        }}\n      >\n        <li>\n          <img src=\"https://img.icons8.com/material-outlined/24/000000/activity-feed-2.png\" />\n          Feed\n        </li>\n        <li>\n          {\" \"}\n          <img src=\"https://img.icons8.com/pastel-glyph/64/000000/teacher.png\" />\n          Mentoring\n        </li>\n        <li>\n          <img src=\"https://img.icons8.com/android/24/000000/briefcase.png\" />\n          Jobs\n        </li>\n        <li>\n          <img src=\"https://img.icons8.com/android/24/000000/picture.png\" />\n          Photos\n        </li>\n        <li>\n          <img src=\"https://img.icons8.com/android/24/000000/groups.png\" />\n          Groups\n        </li>\n        <li>\n          <img src=\"https://img.icons8.com/android/24/000000/tear-off-calendar.png\" />\n          Events\n        </li>\n      </ul>\n    </>\n  );\n};\n\nexport default LeftBar;\n","import React from \"react\";\nimport moment from \"moment\";\nimport style from \"./notifStyle.css\";\nimport { colors } from \"@material-ui/core\";\nconst Notifications = (props) => {\n  const { notifications } = props;\n\n  return (\n    <div\n      style={{\n        listStyleType: \"none\",\n        border: \"1px white solid\",\n        backgroundColor: \"white\",\n        width: \"250px\",\n        height: \"250px\",\n        overflow: \"scroll\",\n        borderRadius: \"20px\",\n      }}\n      className=\"notif\"\n    >\n      <ul>\n        {\" \"}\n        <span style={{ color: \"rgb(27,157,226\" }}> Last Activities</span>\n        {notifications &&\n          notifications.map((item) => {\n            return (\n              <li key={item.id}>\n                <span style={{ display: \"block\" }}>{item.user}</span>\n                <span>{item.content}</span>\n                <div className=\"grey-text note-date\">\n                  {moment(item.time.toDate()).fromNow()}\n                </div>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from \"react\";\nimport style from \"./Jobs.css\";\nconst Jobs = (props) => {\n  const { jobs } = props;\n\n  return (\n    <div\n      style={{\n        listStyleType: \"none\",\n        border: \"1px white solid\",\n        backgroundColor: \"white\",\n        width: \"250px\",\n        borderRadius: \"20px\",\n      }}\n      className=\"jobs\"\n    >\n      <ul>\n        <li>\n          <div>\n            <span\n              style={{\n                color: \"white\",\n                borderRadius: \"9px\",\n                backgroundColor: \"rgb(197,163,82)\",\n                width: \"100px\",\n                padding: \"7px\",\n              }}\n            >\n              {jobs && jobs.length}\n            </span>\n            <span className=\"ml-2\">NEW</span>\n          </div>\n        </li>\n        <li style={{ fontSize: \"20px\" }}>Recent Jobs</li>\n        {jobs &&\n          jobs.map((job) => {\n            return (\n              <ul>\n                <li style={{ width: \"200px\" }}>\n                  <div style={{ display: \"flex\" }}>\n                    <span>\n                      <img style={{ width: \"45px\" }} src={job.LogoUrl} />\n                    </span>\n                    <span>\n                      <span style={{ color: \"black\", fontSize: \"16px\" }}>\n                        {job.Title}\n                      </span>{\" \"}\n                      <p>{job.Company} </p>\n                    </span>\n                  </div>\n                </li>\n              </ul>\n            );\n          })}\n        <li style={{ color: \"black\", fontSize: \"18px\" }}>\n          {\" \"}\n          <a href=\"\">View Jobs</a>{\" \"}\n        </li>\n        <li></li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Jobs;\n","import React from \"react\";\nimport RightBarStyle from \"./RightBarStyle.css\";\nimport Notifications from \"./Notifications/Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Jobs from \"./Jobs/Jobs\";\nimport {\n  TwitterTimelineEmbed,\n  TwitterShareButton,\n  TwitterFollowButton,\n  TwitterHashtagButton,\n  TwitterMentionButton,\n  TwitterTweetEmbed,\n  TwitterMomentShare,\n  TwitterDMButton,\n  TwitterVideoEmbed,\n  TwitterOnAirButton,\n} from \"react-twitter-embed\";\n\nconst RightBar = (props) => {\n  const { notifications, jobs } = props;\n  // const job = jobs[0].job;\n  console.log(\"test\", jobs && jobs[0].job);\n\n  return (\n    <div className=\"rightUl\">\n      <div>\n        <Jobs jobs={jobs && jobs[0].job}></Jobs>\n      </div>\n\n      <Notifications notifications={notifications}></Notifications>\n      <div className=\"mt-3 twitterFeed\">\n        <TwitterTimelineEmbed\n          sourceType=\"profile\"\n          // screenName=\"StackOverflow\"\n          screenName=\"recodedofficial\"\n          options={{ height: 550 }}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  console.log(state, \"kestate\");\n\n  return {\n    jobs: state.firestore.ordered.jobs,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"jobs\" },\n\n    { collection: \"notifications\", limit: 15, orderBy: [\"time\", \"desc\"] },\n  ])\n)(RightBar);\n","import React, { useState } from \"react\";\nimport Image from \"react-bootstrap/Image\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { createFilePost } from \"../../../../store/actions/publicPostActions\";\nimport { compose } from \"redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport style from \"./PostContainer.css\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst PostContainer = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n  }));\n  const classes = useStyles();\n\n  const [imageAsFile, setImageAsFile] = useState(null);\n  const [postText, setText] = useState(null);\n\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0];\n\n    setImageAsFile(image);\n  };\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n    console.log(postText);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (imageAsFile === null) {\n      return props.createFilePost(null, { PostText: postText });\n    } else {\n      return props.createFilePost(imageAsFile, { PostText: postText });\n    }\n  };\n\n  const textClicked = () => {\n    let submitField = document.getElementById(\"submitField\");\n    let mainInp = document.querySelector(\".mainInput\");\n    let closeBtn = document.getElementById(\"closePostField\");\n\n    mainInp.classList.add(\"marginBot\");\n    closeBtn.classList.remove(\"hidden\");\n    submitField.classList.remove(\"hidden\");\n  };\n\n  const closeFieldHandler = () => {\n    let mainInp = document.querySelector(\".mainInput\");\n\n    mainInp.classList.remove(\"marginBot\");\n\n    let submitField = document.getElementById(\"submitField\");\n    let closeBtn = document.getElementById(\"closePostField\");\n    submitField.classList.add(\"hidden\");\n    closeBtn.classList.add(\"hidden\");\n  };\n\n  return (\n    <div className=\"PostContainer\">\n      <div\n        className=\"mainInput\"\n        style={{\n          width: \"600px\",\n          height: \"100px\",\n          display: \"flex\",\n          backgroundColor: \"white\",\n          border: \"1px solid white\",\n          padding: \"10px\",\n          borderTopRightRadius: \"20px\",\n          borderTopLeftRadius: \"20px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        <Avatar\n          style={{ top: \"10px\", width: \"60px\", height: \"60px\" }}\n          aria-label=\"recipe\"\n          className={classes.avatar}\n        >\n          {props.profile.ppUrl ? (\n            <img width=\"100%\" src={props.profile.ppUrl}></img>\n          ) : (\n            props.profile.initials && props.profile.initials\n          )}\n        </Avatar>\n\n        <div>\n          {console.log(props, \"kes\")}\n\n          <form onSubmit={(e) => handleSubmit(e)} autoComplete=\"off\">\n            <span id=\"addPost\" className=\"pb-3 hidden\">\n              Add post\n            </span>\n\n            <TextField\n              multiline\n              disabled={props.profile.isEmpty}\n              className=\"mb-4 ml-4\"\n              name=\"text\"\n              required={true}\n              onClick={() => textClicked()}\n              onChange={(e) => handleChange(e)}\n              style={{ width: \"450px\" }}\n              id=\"standard-basic\"\n              label=\"Say hello, ask for help, or just post what's new on your mind.\"\n            />\n            <button\n              id=\"closePostField\"\n              style={{ fontSize: \"17px\" }}\n              type=\"button\"\n              className=\"hidden btn btn-primary\"\n              onClick={() => closeFieldHandler()}\n            >\n              X\n            </button>\n\n            <div\n              className=\"hidden\"\n              id=\"submitField\"\n              style={{\n                backgroundColor: \"rgb(247,247,247)\",\n                // marginBottom: \"200px\",\n                paddingBottom: \"50px\",\n                display: \"block\",\n                width: \"500px\",\n              }}\n            >\n              <div\n                style={{\n                  borderBottom: \"1px solid gray\",\n                  paddingBottom: \"8px\",\n                  paddingTop: \"9px\",\n                }}\n              >\n                <input\n                  disabled={props.profile.isEmpty}\n                  onChange={handleImageAsFile}\n                  class=\"btn btn-secondary mb-3 mt-3\"\n                  type=\"file\"\n                  name=\"user[image]\"\n                  multiple={false}\n                />\n              </div>\n              <button\n                disabled={props.profile.isEmpty}\n                onClick={(e) => handleSubmit(e)}\n                type=\"button\"\n                class=\"btn btn-primary mt-3\"\n              >\n                Submit\n              </button>{\" \"}\n              {props.profile.isEmpty ? (\n                <div style={{ color: \"red\" }}>\n                  To send post please <a href=\"/login\">login</a> or{\" \"}\n                  <a href=\"/signup\">signup</a>\n                </div>\n              ) : null}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { profile: state.firebase.profile, auth: state.firebase.auth };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // createPost: (taskObj) => dispatch(createPost(taskObj)),\n    createFilePost: (file, text) => dispatch(createFilePost(file, text)),\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(\n  PostContainer\n);\n","export const createFilePost = (file, text) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const authorId = getState().firebase.auth.uid;\n    const authorName = getState().firebase.profile.firstName;\n    const authorLastname = getState().firebase.profile.lastName;\n    const firebase = getFirebase();\n    const imagesPath = \"images\";\n    const firestore = getFirestore();\n    let postsArray = \"\";\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === getState().firebase.auth.uid\n        ? (postsArray = user.posts)\n        : null;\n    });\n\n    if (file === null) {\n      return (\n        firestore\n          .collection(\"PublicPosts\")\n          .add({\n            ...text, ///project.title ve project.content demek ile ayni sey (spread operator kullanmak)\n            createdAt: new Date(),\n            authorId: authorId,\n            authorName: authorName,\n            authorLastName: authorLastname,\n            likes: 0,\n            comments: [],\n            UsersLiked: [],\n          })\n          .then((docRef) => {\n            firestore\n              .collection(\"users\")\n              .doc(authorId)\n              .update({ posts: postsArray.concat(docRef.id) });\n          })\n          // .then(() => {\n          //   firestore\n          //     .collection(\"users\")\n          //     .doc(authorId)\n          //     // .collection(\"UsersLiked\")\n          //     .update({ posts: postsUpdated });\n          // })\n          .then(() => {\n            dispatch({ type: \"CREATE_PUBLIC_TASK\", text });\n          })\n          .catch((err) => {\n            dispatch({ type: \"CREATE_PUBLIC_TASK_ERROR\", text });\n          })\n      );\n    } else {\n      return firebase\n        .uploadFile(imagesPath, file)\n        .then((ret) => ret.uploadTaskSnapshot.ref.getDownloadURL())\n        .then((url) =>\n          firestore\n            .collection(\"PublicPosts\")\n            .add({\n              ...text, ///project.title ve project.content demek ile ayni sey (spread operator kullanmak)\n              createdAt: new Date(),\n              imageUrl: url,\n              authorId: authorId,\n              authorName: authorName,\n              authorLastName: authorLastname,\n              likes: 0,\n              comments: [],\n              UsersLiked: [],\n            })\n            .then((docRef) => {\n              firestore\n                .collection(\"users\")\n                .doc(authorId)\n                .update({ posts: postsArray.concat(docRef.id) });\n            })\n            // .then(() => {\n            //   firestore\n            //     .collection(\"users\")\n            //     .doc(authorId)\n            //     // .collection(\"UsersLiked\")\n            //     .update({ posts: postsUpdated });\n            // })\n            .then(() => {\n              dispatch({ type: \"CREATE_PUBLIC_TASK\", text });\n            })\n            .catch((err) => {\n              dispatch({ type: \"CREATE_PUBLIC_TASK_ERROR\", text });\n            })\n        );\n    }\n  };\n};\n\nexport const postLike = (postId, like, UsersLiked) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const authorId = getState().firebase.auth.uid;\n\n    let UsersLikedUpdated = UsersLiked.concat(authorId);\n    let likedPosts = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === getState().firebase.auth.uid\n        ? (likedPosts = user.likedPosts)\n        : null;\n    });\n\n    let LikedPostsUpdated = likedPosts.concat(postId);\n\n    firestore\n      .collection(\"users\")\n      .doc(authorId)\n      // .collection(\"likedPosts\")\n      .update({ likedPosts: LikedPostsUpdated })\n\n      .then(() => {\n        firestore\n          .collection(\"PublicPosts\")\n          .doc(postId)\n          .update({ likes: like + 1 })\n\n          .then(() => {\n            firestore\n              .collection(\"PublicPosts\")\n              .doc(postId)\n              // .collection(\"UsersLiked\")\n              .update({ UsersLiked: UsersLikedUpdated });\n          });\n      });\n  };\n};\n\nexport const postDislike = (postId, like, UsersLiked) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const authorId = getState().firebase.auth.uid;\n\n    let pos = UsersLiked.indexOf(authorId);\n\n    let UsersLikedUpdated = [...UsersLiked];\n    UsersLikedUpdated.splice(pos);\n\n    let likedPosts = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === getState().firebase.auth.uid\n        ? (likedPosts = user.likedPosts)\n        : null;\n    });\n\n    let position = likedPosts.indexOf(postId);\n\n    let LikedPostsUpdated = [...likedPosts];\n    LikedPostsUpdated.splice(position);\n\n    firestore\n      .collection(\"users\")\n      .doc(authorId)\n      // .collection(\"likedPosts\")\n      .update({ likedPosts: LikedPostsUpdated })\n\n      .then(() => {\n        firestore\n          .collection(\"PublicPosts\")\n          .doc(postId)\n          .update({ likes: like - 1 })\n\n          .then(() => {\n            firestore\n              .collection(\"PublicPosts\")\n              .doc(postId)\n              // .collection(\"UsersLiked\")\n              .update({ UsersLiked: UsersLikedUpdated });\n          });\n      });\n  };\n};\n\nexport const createComment = (postId, comment) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const authorId = getState().firebase.auth.uid;\n\n    let authorFirstName = \"\";\n    let authorLastName = \"\";\n    let authorProfilPictureLink = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === authorId ? (authorFirstName = user.firstName) : null;\n    });\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === authorId ? (authorLastName = user.lastName) : null;\n    });\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === authorId\n        ? (authorProfilPictureLink = user.ppUrl)\n        : null;\n    });\n\n    let commentsArr = [];\n\n    getState().firestore.ordered.PublicPosts.map((post) => {\n      return post.id === postId ? (commentsArr = post.comments) : null;\n    });\n\n    let madeComments = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === getState().firebase.auth.uid\n        ? (madeComments = user.madeComments)\n        : null;\n    });\n\n    let madeCommentsUpdated = madeComments.concat({\n      comment: comment,\n      date: new Date(),\n      post: postId,\n    });\n\n    let commentsUpdatedArr = {\n      comment: comment,\n      authorId: authorId,\n      authorFirstName: authorFirstName,\n      authorLastName: authorLastName,\n      date: new Date(),\n      authorPic: authorProfilPictureLink,\n    };\n\n    let updatedArr = commentsArr.concat(commentsUpdatedArr);\n\n    let commentObj = { comments: updatedArr };\n\n    firestore\n      .collection(\"PublicPosts\")\n      .doc(postId)\n      // .collection(\"likedPosts\")\n      .update(commentObj)\n      .then(() => {\n        firestore\n          .collection(\"users\")\n          .doc(authorId)\n          // .collection(\"UsersLiked\")\n          .update({ madeComments: madeCommentsUpdated });\n      });\n    // .then(() => {\n    //   firestore\n    //     .collection(\"PublicPosts\")\n    //     .doc(postId)\n    //     .update({ likes: like + 1 })\n\n    //     .then(() => {\n    //       firestore\n    //         .collection(\"PublicPosts\")\n    //         .doc(postId)\n    //         // .collection(\"UsersLiked\")\n    //         .update({ UsersLiked: UsersLikedUpdated });\n    //     });\n    // });\n  };\n};\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport moment from \"moment\";\nimport style from \"./PublicPosts.css\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  postLike,\n  postDislike,\n  createComment,\n} from \"../../../../store/actions/publicPostActions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction PostMapper(props) {\n  const [comment, setComment] = useState(\"\");\n\n  const commentSubmit = (postId, e) => {\n    e.preventDefault();\n\n    props.createComment(postId, comment);\n  };\n\n  const commentChange = (e) => {\n    setComment(e.target.value);\n    console.log(comment);\n  };\n\n  const { posts, users, likes, auth, userProfile } = props;\n  const classes = useStyles();\n\n  const likeHandler = (postId, like, UsersLiked) => {\n    props.postLike(postId, like, UsersLiked);\n  };\n  const dislikeHandler = (postId, like, UsersLiked) => {\n    props.postDislike(postId, like, UsersLiked);\n  };\n\n  return (\n    <>\n      {posts &&\n        posts.map((post) => {\n          return (\n            <Card\n              style={{\n                marginBottom: \"15px\",\n                width: \"600px\",\n                maxWidth: \"none\",\n                // fontFamily: \"Roboto\",\n                textAlign: \"left\",\n                color: \"black\",\n              }}\n              className={classes.root}\n            >\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {users &&\n                      users.map((user) => {\n                        if (user.id === post.authorId) {\n                          if (user.ppUrl) {\n                            return (\n                              <Link\n                                to={{\n                                  pathname: `/user/${user.id}`,\n                                }}\n                              >\n                                {\" \"}\n                                <img width=\"100%\" src={user.ppUrl}></img>{\" \"}\n                              </Link>\n                            );\n                          } else {\n                            return (\n                              <Link\n                                to={{\n                                  pathname: `/user/${user.id}`,\n                                }}\n                              >\n                                {\" \"}\n                                user.initials{\" \"}\n                              </Link>\n                            );\n                          }\n                        }\n                      })}\n                  </Avatar>\n                }\n                action={\n                  <IconButton aria-label=\"settings\">\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n                title={\n                  users &&\n                  users.map((user) => {\n                    if (user.id === post.authorId) {\n                      return (\n                        <Link\n                          to={{\n                            pathname: `/user/${user.id}`,\n                          }}\n                        >\n                          {user.firstName + \" \" + user.lastName}\n                        </Link>\n                      );\n                    }\n                  })\n                }\n                subheader={moment(post.createdAt.toDate()).calendar()}\n              />\n              <CardContent>\n                <Typography variant=\"body1\" color=\"textDark\" component=\"p\">\n                  {post.PostText}\n                </Typography>\n              </CardContent>\n              <img width=\"600px\" src={post.imageUrl} alt=\"\" />\n              <span\n                style={{\n                  fontSize: \"14px\",\n                  borderBottom: \"1px solid rgb(235,235,235)\",\n                  marginLeft: \"10px\",\n                  paddingBottom: \"8px\",\n                }}\n              >\n                <span className=\"mr-2\">Likes: {post.likes}</span>\n                <span> Comments: {post.comments.length}</span>\n              </span>\n              <div\n                style={{\n                  marginTop: \"13px\",\n                  marginLeft: \"10px\",\n                  display: \"block\",\n                  paddingBottom: \"8px\",\n\n                  borderBottom: \"1px solid rgb(235,235,235)\",\n                }}\n              >\n                {post.UsersLiked && post.UsersLiked.includes(auth.uid) ? (\n                  <img\n                    className=\"likeBtn\"\n                    onClick={() =>\n                      dislikeHandler(post.id, post.likes, post.UsersLiked)\n                    }\n                    width=\"24px\"\n                    src=\"https://img.icons8.com/office/16/000000/filled-like.png\"\n                  />\n                ) : (\n                  <img\n                    className=\"likeBtn\"\n                    onClick={() =>\n                      likeHandler(post.id, post.likes, post.UsersLiked)\n                    }\n                    src=\"https://img.icons8.com/material-outlined/24/000000/filled-like.png\"\n                  />\n                )}{\" \"}\n                Like\n              </div>\n              <form onSubmit={(e) => commentSubmit(post.id, e)} action=\"\">\n                <TextField\n                  name=\"text\"\n                  //   onClick={() => commentClicked()}\n                  onChange={(e) => commentChange(e)}\n                  style={{\n                    width: \"560px\",\n                    marginLeft: \"10px\",\n                    marginBottom: \"14px\",\n                  }}\n                  id=\"standard-basic\"\n                  label=\"Write a comment..\"\n                ></TextField>\n                <img\n                  style={{ marginTop: \"30px\", cursor: \"pointer\" }}\n                  onClick={(e) => commentSubmit(post.id, e)}\n                  src=\"https://img.icons8.com/small/16/000000/filled-sent.png\"\n                />\n              </form>\n\n              <div className=\"comments\">\n                {post.comments.length != 0 ? (\n                  <span style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\n                    Comments:\n                  </span>\n                ) : null}\n\n                {post.comments &&\n                  post.comments.map((comment) => {\n                    return (\n                      <div style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\n                        <div style={{ display: \"flex\", marginTop: \"9px\" }}>\n                          <Avatar\n                            aria-label=\"recipe\"\n                            className={classes.avatar}\n                          >\n                            {comment.authorPic ? (\n                              <Link\n                                to={{\n                                  pathname: `/user/${comment.authorId}`,\n                                }}\n                              >\n                                <img width=\"100%\" src={comment.authorPic}></img>\n                              </Link>\n                            ) : (\n                              <Link\n                                to={{\n                                  pathname: `/user/${comment.authorId}`,\n                                }}\n                              >\n                                {comment.authorFirstName[0] +\n                                  comment.authorLastName[0]}\n                              </Link>\n                            )}\n                          </Avatar>\n\n                          <Typography\n                            variant=\"body1\"\n                            color=\"textDark\"\n                            component=\"p\"\n                          >\n                            <Link\n                              to={{\n                                pathname: `/user/${comment.authorId}`,\n                              }}\n                            >\n                              {comment.authorFirstName +\n                                \" \" +\n                                comment.authorLastName}\n                            </Link>\n                          </Typography>\n\n                          {/* </span> */}\n                        </div>\n                        <div\n                          style={{\n                            fontSize: \"12px\",\n                            color: \"rgb(173,173,173)\",\n                          }}\n                        >\n                          {\" \"}\n                          {moment(comment.date.toDate()).calendar()}\n                        </div>\n                        {/* <p\n                          style={{\n                            fontSize: \"18px\",\n                            color: \"rgb(102,102,102)\",\n                          }}\n                        > */}\n                        <Typography\n                          variant=\"body1\"\n                          color=\"textDark\"\n                          component=\"p\"\n                        >\n                          {comment.comment}\n                        </Typography>\n\n                        {/* </p> */}\n                      </div>\n                    );\n                  })}\n              </div>\n            </Card>\n          );\n        })}\n    </>\n  );\n}\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n\n  return {\n    posts: state.firestore.ordered.PublicPosts,\n    likes: state.firestore.ordered.likes,\n    auth: state.firebase.auth,\n    userProfile: state.firebase.auth.profile,\n    users: state.firestore.ordered.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    postLike: (postId, like, UsersLiked) =>\n      dispatch(postLike(postId, like, UsersLiked)),\n    postDislike: (postId, like, UsersLiked) =>\n      dispatch(postDislike(postId, like, UsersLiked)),\n    createComment: (postId, comment) =>\n      dispatch(createComment(postId, comment)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props) => {\n    return [\n      {\n        collection: \"PublicPosts\",\n        orderBy: [\"createdAt\", \"desc\"],\n      },\n      {\n        collection: \"users\",\n      },\n      //   {\n      //     collection: \"users\",\n      //     doc: props.uuid,\n      //     subcollections: [{ collection: \"likedPosts\" }],\n      //     storeAs: \"likes\",\n      //   },\n    ];\n  })\n)(PostMapper);\n","import React from \"react\";\nimport PostMapper from \"./PostMapper\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\n\nconst Posts = (props) => {\n  if (props.auth.isLoaded) {\n    return <PostMapper> </PostMapper>;\n  } else {\n    return <h1>loading...</h1>;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"state\", state);\n\n  return {\n    posts: state.firestore.ordered.PublicPosts,\n    auth: state.firebase.auth,\n    users: state.firestore.ordered.users,\n  };\n};\n\nexport default connect(mapStateToProps)(Posts);\n","import React from \"react\";\nimport PostContainer from \"./PostContainer/PostContainer\";\nimport style from \"./CenterItems.css\";\nimport Posts from \"./PublicPosts/Posts\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nconst CenterItems = (props) => {\n  return (\n    <div className=\"CenterItems\">\n      <PostContainer></PostContainer>\n      {props.profile.isEmpty ? (\n        <div style={{ color: \"red\" }}>\n          To send, like or comment post please <a href=\"/login\">login</a> or{\" \"}\n          <a href=\"/signup\">signup</a>\n        </div>\n      ) : null}\n      <Posts></Posts>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { profile: state.firebase.profile, auth: state.firebase.auth };\n};\nexport default compose(connect(mapStateToProps, null))(CenterItems);\n","import React from \"react\";\nimport Jumbo from \"./Jumbo/Jumbo\";\nimport LeftBar from \"./LeftBar/LeftBar\";\nimport RightBar from \"./RightBar/RightBar\";\nimport CenterItems from \"./CenterItems/CenterItems\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport style from \"./Dashboard.css\";\nconst Dashboard = (props) => {\n  // const { posts } = props;\n\n  return (\n    <>\n      <Jumbo></Jumbo>\n      <div\n        style={{\n          // overflow: \"scroll\",\n          marginTop: \"20px\",\n        }}\n      >\n        <div class=\"container centerIt\">\n          <div class=\"row\">\n            <div class=\"col md-3 leftBar\">\n              <LeftBar></LeftBar>\n            </div>\n            <div class=\"col md-6\">\n              <CenterItems></CenterItems>\n            </div>\n            <div class=\"col md-3\">\n              <RightBar></RightBar>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.firestore.ordered.PublicPosts,\n    // auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"PublicPosts\", orderBy: [\"createdAt\", \"desc\"] },\n  ])\n)(Dashboard);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nexport class SignUp extends Component {\n  state = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\" style={{ marginTop: \"200px\" }}>\n        <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              onChange={(e) => this.handleChange(e)}\n              type=\"text\"\n              id=\"lastName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              onChange={(e) => this.handleChange(e)}\n              type=\"text\"\n              id=\"firstName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={(e) => this.handleChange(e)}\n              type=\"email\"\n              id=\"email\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={(e) => this.handleChange(e)}\n              type=\"password\"\n              id=\"password\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nexport class SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) return <Redirect to=\"/\"></Redirect>;\n\n    return (\n      <div className=\"container\" style={{ marginTop: \"200px\" }}>\n        <form onSubmit={(e) => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">SignIn</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              required\n              type=\"email\"\n              id=\"email\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              required\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => this.handleChange(e)}\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard(props) {\n  const { posts } = props;\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <>\n      {posts &&\n        posts.map((post) => {\n          return (\n            <Card\n              style={{\n                marginBottom: \"15px\",\n                width: \"600px\",\n                maxWidth: \"none\",\n                // fontFamily: \"Roboto\",\n                textAlign: \"left\",\n                color: \"black\",\n              }}\n              className={classes.root}\n            >\n              <CardHeader\n                avatar={\n                  <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {post.authorName[0] + post.authorLastName[0]}\n                  </Avatar>\n                }\n                action={\n                  <IconButton aria-label=\"settings\">\n                    <MoreVertIcon />\n                  </IconButton>\n                }\n                title={post.authorName + \" \" + post.authorLastName}\n                subheader={moment(post.createdAt.toDate()).calendar()}\n              />\n              <CardContent>\n                <Typography variant=\"body1\" color=\"textDark\" component=\"p\">\n                  {post.PostText}\n                </Typography>\n              </CardContent>\n              <img width=\"600px\" src={post.imageUrl} alt=\"\" />\n              <span\n                style={{\n                  fontSize: \"14px\",\n                  borderBottom: \"1px solid rgb(235,235,235)\",\n                  marginLeft: \"10px\",\n                  paddingBottom: \"8px\",\n                }}\n              >\n                <span className=\"mr-2\">Likes: {post.likes}</span>\n                <span> Comments: {post.comments.length}</span>\n              </span>\n\n              <div className=\"comments\">\n                <span style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\n                  Comments:\n                </span>\n\n                {post.comments &&\n                  post.comments.map((comment) => {\n                    return (\n                      <div style={{ textAlign: \"left\", marginLeft: \"10px\" }}>\n                        <div style={{ display: \"flex\", marginTop: \"9px\" }}>\n                          {/* <Avatar\n                            aria-label=\"recipe\"\n                            className={classes.avatar}\n                          >\n                            {comment.authorFirstName}\n                          </Avatar> */}\n\n                          {/* <span\n                            style={{\n                              fontWeight: \"500\",\n                              marginBottom: \"0\",\n                              color: \"rgb(102,102,102)\",\n                            }}\n                          > */}\n                          <Typography\n                            variant=\"body1\"\n                            color=\"textDark\"\n                            component=\"p\"\n                          >\n                            {comment.authorFirstName +\n                              \" \" +\n                              comment.authorLastName}\n                          </Typography>\n                          {/* </span> */}\n                        </div>\n                        <div\n                          style={{\n                            fontSize: \"12px\",\n                            color: \"rgb(173,173,173)\",\n                          }}\n                        >\n                          {\" \"}\n                          {moment(comment.date.toDate()).calendar()}\n                        </div>\n                        {/* <p\n                          style={{\n                            fontSize: \"18px\",\n                            color: \"rgb(102,102,102)\",\n                          }}\n                        > */}\n                        <Typography\n                          variant=\"body1\"\n                          color=\"textDark\"\n                          component=\"p\"\n                        >\n                          {comment.comment}\n                        </Typography>\n\n                        {/* </p> */}\n                      </div>\n                    );\n                  })}\n              </div>\n            </Card>\n          );\n        })}\n    </>\n  );\n}\n","import React from \"react\";\nimport PostsCard from \"./PostsCard\";\n\nconst ProfilePostMapper = (props) => {\n  const { profile, publicPosts } = props;\n\n  const postsArr = [];\n\n  publicPosts &&\n    publicPosts.map((post) => {\n      if (profile.posts && profile.posts.includes(post.id)) {\n        postsArr.push(post);\n      }\n    });\n  return (\n    <>\n      <PostsCard posts={postsArr}></PostsCard>\n    </>\n  );\n};\n\nexport default ProfilePostMapper;\n","import React from \"react\";\nimport PostsCard from \"./PostsCard\";\nconst LikesMapper = (props) => {\n  const { profile, publicPosts } = props;\n  const likesArr = [];\n  publicPosts &&\n    publicPosts.map((post) => {\n      if (profile.likedPosts && profile.likedPosts.includes(post.id)) {\n        likesArr.push(post);\n      }\n    });\n\n  return (\n    <>\n      <PostsCard posts={likesArr}></PostsCard>\n    </>\n  );\n};\n\nexport default LikesMapper;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst FriendsMapper = (props) => {\n  const { profile, users } = props;\n  let friends = [];\n\n  {\n    users &&\n      profile &&\n      users.map((user) => {\n        profile.friends.map((friend) => {\n          if (user.id === friend) {\n            friends.push(user);\n          }\n        });\n      });\n  }\n\n  console.log(\"friends:\", friends);\n\n  return (\n    <>\n      {friends &&\n        friends.map((friend) => {\n          return (\n            <li>\n              <span>\n                <Link\n                  to={{\n                    pathname: `/user/${friend.id}`,\n                  }}\n                >\n                  {friend.firstName + \" \"} {friend.lastName}\n                </Link>\n              </span>\n            </li>\n          );\n        })}\n    </>\n  );\n};\n\nexport default FriendsMapper;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Row from \"react-bootstrap/Row\";\nimport ProfilePostMapper from \"./ProfilePostMapper\";\nimport LikesMapper from \"./LikesMapper\";\nimport FriendsMapper from \"./FriendsMapper\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { publicPosts, profile, users } = props;\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Posts\" {...a11yProps(0)} />\n          <Tab label=\"Likes\" {...a11yProps(1)} />\n          <Tab label=\"Friends\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Row>\n          <ProfilePostMapper\n            profile={profile}\n            publicPosts={publicPosts}\n          ></ProfilePostMapper>\n        </Row>\n      </TabPanel>\n\n      <TabPanel value={value} index={1}>\n        <Row>\n          <LikesMapper\n            profile={profile}\n            publicPosts={publicPosts}\n          ></LikesMapper>\n        </Row>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <FriendsMapper users={users} profile={profile}></FriendsMapper>\n      </TabPanel>\n    </div>\n  );\n}\n","export const addUserImage = (file, userId) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const imagesPath = \"images\";\n    const firestore = getFirestore();\n    {\n      return firebase\n        .uploadFile(imagesPath, file)\n        .then((ret) => ret.uploadTaskSnapshot.ref.getDownloadURL())\n        .then((url) =>\n          firestore.collection(\"users\").doc(userId).update({\n            ppUrl: url,\n          })\n        );\n    }\n  };\n};\n","import React, { useState } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect, authIsReady } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\n// import ProfileMapper from \"./ProfileMapper\";\nimport { red } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ScrollableTabsButtonAuto from \"./Tab\";\nimport moment from \"moment\";\nimport { addUserImage } from \"../../store/actions/profileActions\";\n\nconst MyProfile = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      margin: \"0 auto\",\n      backgroundColor: red[500],\n    },\n  }));\n  const [imageAsFile, setImageAsFile] = useState(null);\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0];\n\n    setImageAsFile(image);\n  };\n  const handleSubmit = (e, userId) => {\n    e.preventDefault();\n\n    return props.addUserImage(imageAsFile, userId);\n  };\n\n  const classes = useStyles();\n  const { auth, profile, publicPosts, users } = props;\n\n  return (\n    <>\n      <Container>\n        {/* <h2 style={{ textAlign: \"center\" }}>My Profile</h2> */}\n\n        <div style={{ textAlign: \"center\" }}>\n          <div>\n            <h2>{profile.firstName + \" \" + profile.lastName} </h2>\n\n            <Avatar\n              style={{ width: \"100px\", height: \"100px\" }}\n              className={classes.avatar}\n            >\n              {profile.ppUrl ? (\n                <img width=\"100%\" src={profile.ppUrl}></img>\n              ) : (\n                profile.initials && profile.initials\n              )}\n            </Avatar>\n          </div>\n          <form style={{ margin: \"0 auto\", width: \"200px\" }}>\n            <div class=\"form-group\">\n              <label for=\"exampleFormControlFile1\">\n                Change Profile Picture: <span>&nbsp;&nbsp;</span>\n              </label>\n\n              <input\n                onChange={handleImageAsFile}\n                type=\"file\"\n                class=\"form-control-file\"\n                id=\"exampleFormControlFile1\"\n                multiple={false}\n              />\n              <button\n                onClick={(e) => handleSubmit(e, profile.id)}\n                type=\"submit\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n          <p style={{ marginTop: \"10px\" }}>\n            Joined:{\" \"}\n            <span>\n              <p>\n                {\" \"}\n                {profile.isLoaded &&\n                  moment(profile.createdAt.toDate()).calendar()}\n              </p>\n            </span>{\" \"}\n          </p>\n        </div>\n        <ScrollableTabsButtonAuto\n          publicPosts={publicPosts}\n          profile={profile}\n          users={users}\n        ></ScrollableTabsButtonAuto>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    publicPosts: state.firestore.ordered.PublicPosts,\n    profile: state.firebase.profile,\n    users: state.firestore.ordered.users,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // createPost: (taskObj) => dispatch(createPost(taskObj)),\n    addUserImage: (file, userId) => dispatch(addUserImage(file, userId)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props) => {\n    return [\n      {\n        collection: \"users\",\n      },\n      {\n        collection: \"PublicPosts\",\n        orderBy: [\"createdAt\", \"desc\"],\n      },\n    ];\n  })\n)(MyProfile);\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect, authIsReady } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { red } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ScrollableTabsButtonAuto from \"../myProfile/Tab\";\nimport moment from \"moment\";\nimport { Redirect } from \"react-router-dom\";\nimport { addFriends, removeFriends } from \"../../store/actions/friendsActions\";\n\nconst UserProfile = (props) => {\n  const userPath = window.location.pathname.split(\"/\").pop();\n  const { users } = props;\n  let user =\n    users &&\n    users.find((user) => {\n      return user.id === userPath;\n    });\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\", // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\",\n    },\n    avatar: {\n      margin: \"0 auto\",\n      backgroundColor: red[500],\n    },\n  }));\n\n  const classes = useStyles();\n  const { auth, profile, publicPosts } = props;\n\n  if (user) {\n    if (user === undefined) {\n      return \"User not found\";\n    } else if (profile.id === user.id) {\n      return <Redirect to=\"/myprofile\"></Redirect>;\n    } else {\n      return (\n        <>\n          <Container>\n            <h4 style={{ textAlign: \"center\" }}>Profile</h4>\n            <div style={{ textAlign: \"center\" }}>\n              <div>\n                {user.firstName + \" \" + user.lastName}\n                <Avatar\n                  style={{ width: \"70px\", height: \"70px\" }}\n                  className={classes.avatar}\n                >\n                  {user.ppUrl ? (\n                    <img width=\"100%\" src={user.ppUrl}></img>\n                  ) : (\n                    user.initials && user.initials\n                  )}{\" \"}\n                </Avatar>\n              </div>\n\n              <p>\n                Joined:{\" \"}\n                <span>\n                  <p>\n                    {profile.isLoaded &&\n                      moment(user.createdAt.toDate()).calendar()}\n                  </p>\n                </span>{\" \"}\n              </p>\n\n              {user.friends && user.friends.includes(profile.id) ? (\n                <button\n                  onClick={() => props.removeFriends(user.id)}\n                  type=\"button\"\n                  class=\"btn btn-danger mb-2\"\n                >\n                  \"Remove Friend :(\"\n                </button>\n              ) : (\n                <button\n                  onClick={() => props.addFriends(user.id)}\n                  type=\"button\"\n                  class=\"btn btn-primary mb-2\"\n                >\n                  Add Friend!\n                </button>\n              )}\n            </div>\n            <ScrollableTabsButtonAuto\n              publicPosts={publicPosts}\n              profile={user}\n              users={users}\n            ></ScrollableTabsButtonAuto>\n          </Container>\n        </>\n      );\n    }\n  } else {\n    return <h1>loading</h1>;\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    publicPosts: state.firestore.ordered.PublicPosts,\n    profile: state.firebase.profile,\n    users: state.firestore.ordered.users,\n    auth: state.firebase.auth,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addFriends: (userId) => dispatch(addFriends(userId)),\n    removeFriends: (userId) => dispatch(removeFriends(userId)),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  firestoreConnect((props) => {\n    return [\n      {\n        collection: \"users\",\n      },\n      {\n        collection: \"PublicPosts\",\n        orderBy: [\"createdAt\", \"desc\"],\n      },\n    ];\n  })\n)(UserProfile);\n","export const addFriends = (userId) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n\n    let authId = getState().firebase.auth.uid;\n    let userFriends = \"\";\n    let authFriends = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === authId ? (authFriends = user.friends) : null;\n    });\n\n    console.log(\"authFri\", authFriends);\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === userId ? (userFriends = user.friends) : null;\n    });\n\n    let authFriendsUpdated = authFriends.concat(userId);\n\n    let userFriendsUpdated = userFriends.concat(authId);\n\n    firestore\n      .collection(\"users\")\n      .doc(authId)\n      // .collection(\"likedPosts\")\n      .update({ friends: authFriendsUpdated })\n\n      .then(() => {\n        firestore\n          .collection(\"users\")\n          .doc(userId)\n          // .collection(\"likedPosts\")\n          .update({ friends: userFriendsUpdated });\n      });\n  };\n};\n\nexport const removeFriends = (userId) => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n\n    let authId = getState().firebase.auth.uid;\n    let authFriends = \"\";\n\n    let userFriends = \"\";\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === authId ? (authFriends = user.friends) : null;\n    });\n\n    getState().firestore.ordered.users.map((user) => {\n      return user.id === userId ? (userFriends = user.friends) : null;\n    });\n\n    let pos = authFriends.indexOf(userId);\n\n    let authFriendsUpdated = [...authFriends];\n\n    authFriendsUpdated.splice(pos);\n\n    let position = userFriends.indexOf(authId);\n\n    let userFriendsUpdated = [...userFriends];\n    userFriendsUpdated.splice(position);\n\n    firestore\n      .collection(\"users\")\n      .doc(authId)\n      // .collection(\"likedPosts\")\n      .update({ friends: authFriendsUpdated })\n\n      .then(() => {\n        firestore\n          .collection(\"users\")\n          .doc(userId)\n          .update({ friends: userFriendsUpdated });\n      });\n  };\n};\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Header from \"./Components/Nav/Navbar\";\nimport Dashboard from \"./Components/Dashboard/Dashboard\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport SignUp from \"./Components/auth/SignUp\";\nimport SignIn from \"./Components/auth/SignIn\";\nimport MyProfile from \"./Components/myProfile/MyProfile\";\nimport UserProfile from \"./Components/userProfile/UserProfile\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header></Header>\n\n      <Switch>\n        <Route exact path=\"/signup\" component={SignUp} />\n        <Route exact path=\"/login\" component={SignIn} />\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/myprofile\" component={MyProfile} />\n        <Route path=\"/:id\" component={UserProfile} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login error\");\n\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNOUT_SUCCESS\":\n      console.log(\"signout\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import authReducer from \"./authReducer\";\nimport taskReducer from \"./taskReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nexport const config = {\n  apiKey: \"AIzaSyAi491Bs560kOay0oi0VOHKJHJZZzu4Y4I\",\n  authDomain: \"portal-ca653.firebaseapp.com\",\n  databaseURL: \"https://portal-ca653.firebaseio.com\",\n  projectId: \"portal-ca653\",\n  storageBucket: \"portal-ca653.appspot.com\",\n  messagingSenderId: \"174190244166\",\n  appId: \"1:174190244166:web:153c072f1ca326af393547\",\n  measurementId: \"G-D60MXLYM4G\",\n};\n\nfirebase.initializeApp(config);\n\nfirebase.firestore();\n\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\"; //binding redux withreact app\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  createFirestoreInstance,\n  getFirestore,\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase, { config } from \"./config/fbConfig\";\n\nconst profileSpecificProps = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false,\n};\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, config)\n  )\n);\nconst rrfProps = {\n  firebase,\n  config: config,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  config: profileSpecificProps,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <App></App>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}